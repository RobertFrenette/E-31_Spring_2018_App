{"version":3,"sources":["./src/$_lazy_route_resource lazy","./src/app/app.component.css","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/confirm/confirm.component.css","./src/app/confirm/confirm.component.html","./src/app/confirm/confirm.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/edit/edit.component.css","./src/app/edit/edit.component.html","./src/app/edit/edit.component.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.html","./src/app/footer/footer.component.ts","./src/app/home/home.component.css","./src/app/home/home.component.html","./src/app/home/home.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.html","./src/app/login/login.component.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.html","./src/app/nav/nav.component.ts","./src/app/providers/auth/auth.service.ts","./src/app/providers/item/item.service.ts","./src/app/providers/nav/nav.service.ts","./src/app/register/register.component.css","./src/app/register/register.component.html","./src/app/register/register.component.ts","./src/app/reset/reset.component.css","./src/app/reset/reset.component.html","./src/app/reset/reset.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/$$_lazy_route_resource lazy\n// module id = ./src/$$_lazy_route_resource lazy recursive\n// module chunks = main","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = ./src/app/app.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n  <app-nav></app-nav>\\n\\n  <router-outlet></router-outlet>\\n\\n  <app-footer></app-footer>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = ./src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'myLists';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule }  from '@angular/router';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\nimport { RegisterComponent } from './register/register.component';\nimport { LoginComponent } from './login/login.component';\nimport { ResetComponent } from './reset/reset.component';\nimport { ConfirmComponent } from './confirm/confirm.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { NavComponent } from './nav/nav.component';\n\nimport { AuthService } from './providers/auth/auth.service';\nimport { ItemService } from './providers/item/item.service';\nimport { NavService } from './providers/nav/nav.service';\nimport { EditComponent } from './edit/edit.component';\n\nconst appRoutes: Routes = [\n  {path: '', component:HomeComponent },\n  {path: 'register', component: RegisterComponent},\n  {path: 'login', component: LoginComponent},\n  {path: 'reset', component: ResetComponent},\n  {path: 'confirm', component:ConfirmComponent },\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'edit', component:EditComponent }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    RegisterComponent,\n    LoginComponent,\n    ResetComponent,\n    ConfirmComponent,\n    HomeComponent,\n    DashboardComponent,\n    FooterComponent,\n    NavComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    HttpModule\n  ],\n  providers: [\n    AuthService,\n    ItemService,\n    NavService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \".anchor {\\n  cursor: pointer;\\n  color: #007bff;\\n}\\n.anchor:hover {\\n  text-decoration: underline;\\n  color: #212529;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirm/confirm.component.css\n// module id = ./src/app/confirm/confirm.component.css\n// module chunks = main","module.exports = \"<h1>Password Reset</h1>\\n<div class=\\\"container\\\">\\n  <form id=\\\"confirmForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userName\\\">User Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"userName\\\" name=\\\"userName\\\" ngModel #userName=\\\"ngModel\\\"\\n            placeholder=\\\"Enter a User Name\\\" required autofocus />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" \\n            id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"emailAddress\\\" #email=\\\"ngModel\\\"\\n            placeholder=\\\"Enter your Email Address\\\" required \\n            pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"\\n            disabled />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" \\n            id=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\"\\n            placeholder=\\\"Enter a Password\\\" minlength=\\\"8\\\" required />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"confirm\\\">Confirm</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" \\n            id=\\\"confirm\\\" name=\\\"confirm\\\" ngModel #confirm=\\\"ngModel\\\"\\n            placeholder=\\\"Confirm your password\\\" minlength=\\\"8\\\" required />\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" id=\\\"resetBtn\\\">Reset</button>\\n  </form>\\n</div>\\n<div class=\\\"container\\\">\\n  <br />\\n  <div class=\\\"alert alert-danger hidden\\\" role=\\\"alert\\\" id=\\\"errMsg\\\" *ngIf=\\\"error == true\\\">{{errmsg}}</div>\\n  <div class=\\\"alert alert-success hidden\\\" role=\\\"alert\\\" id=\\\"successMsg\\\" *ngIf=\\\"pwdreset == true\\\">Your password has been reset. Please\\n    <span title=\\\"Login\\\" class=\\\"anchor\\\" (click)=\\\"onLogin()\\\">login</span>.</div>\\n  Already have an account?\\n  <span title=\\\"Login\\\" class=\\\"anchor\\\" (click)=\\\"onLogin()\\\">Login now.</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/confirm/confirm.component.html\n// module id = ./src/app/confirm/confirm.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\nimport { AuthService } from './../providers/auth/auth.service';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.css']\n})\nexport class ConfirmComponent implements OnInit {\n\n  emailAddress = '';\n  error = false;\n  errmsg = '';\n  pwdreset = false;\n\n  constructor(\n    private authService: AuthService,\n    private router: Router,\n    private activatedRoute: ActivatedRoute) {}\n\n  ngOnInit() {\n    // subscribe to router event\n    this.activatedRoute.queryParams.subscribe((params: Params) => {\n      this.emailAddress  = params['email'];\n    });\n   }\n\n   onSubmit(f:any): void {\n    if (f.userName === '' || f.email === '' || f.password === '' || f.confirm === '') {\n      this.errmsg = 'All fields are required.';\n      this.error = true;\n    } else {\n      if (f.password !== f.confirm) {\n        this.errmsg = 'Passwords must match!'\n        this.error = true;\n      } else {\n        this.authService.confirm(f.userName, this.emailAddress, f.password)\n        .subscribe(\n          result => {\n            // Handle result\n            //console.log(result);\n          },\n          error => {\n            //console.log(error);\n            this.errmsg = 'Unsuccessful.';\n            this.error = true;\n          },\n          () => {\n            // 'onCompleted' callback.\n            this.error = false;\n            this.pwdreset = true;\n          }\n        );\n      }\n    }\n  }\n\n  onLogin(): void {\n    this.router.navigate(['login']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/confirm/confirm.component.ts","module.exports = \"table {\\n  width: 90%;\\n}\\n\\n.fa-edit:hover {\\n  cursor: pointer;\\n  color: blue;\\n}\\n\\n.fa-trash-o:hover {\\n  cursor: pointer;\\n  color: red;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.css\n// module id = ./src/app/dashboard/dashboard.component.css\n// module chunks = main","module.exports = \"<h1>Items (<span id=\\\"userNameSpan\\\">{{userName}}</span>)</h1>\\n<div class=\\\"container\\\">\\n  <form id=\\\"addItemForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"itemName\\\">Item Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"itemName\\\" name=\\\"itemName\\\" ngModel #itemName=\\\"ngModel\\\"\\n            placeholder=\\\"Enter an Item Name\\\" required autofocus />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"description\\\" name=\\\"description\\\" ngModel #description=\\\"ngModel\\\"\\n            placeholder=\\\"(optional)\\\" />\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Add Item</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" id=\\\"resetBtn\\\">Reset</button>\\n  </form>\\n</div>\\n<div class=\\\"container\\\" id=\\\"itemsDiv\\\">\\n  <br />\\n  <div class=\\\"alert alert-warning hidden\\\" role=\\\"alert\\\" id=\\\"warningMsg\\\" *ngIf=\\\"warning == true\\\">{{warningmsg}}</div>\\n  <hr />\\n  <h3>Items</h3>\\n  <table class=\\\"table table-striped\\\">\\n    <thead>\\n      <tr>\\n        <th>Item Name</th>\\n        <th>Description</th>\\n        <th>&nbsp;</th>\\n      </tr>\\n    </thead>\\n    <tbody id=\\\"itemsList\\\">\\n      <tr *ngFor=\\\"let item of items\\\">\\n        <td>{{item.name}}</td>\\n        <td>{{item.desc}}</td>\\n        <td>\\n          <i class=\\\"fa fa-edit\\\" (click)=\\\"onEdit(item._id)\\\"></i>\\n          &nbsp;\\n          <i class=\\\"fa fa-trash-o\\\" (click)=\\\"onDelete(item._id)\\\"></i>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/dashboard/dashboard.component.html\n// module id = ./src/app/dashboard/dashboard.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\n\nimport { ItemService } from './../providers/item/item.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  userName = '';\n  user_id = '';\n  warning = false;\n  warningmsg = '';\n  items: any = null;\n\n  constructor(\n    private itemService: ItemService, \n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() { \n    this.route.params.subscribe(params => {\n      this.userName = params['userName'];\n      this.user_id = params['user_id'];\n\n      this.itemService.getItems(this.user_id)\n      .subscribe(\n        result => {\n          // Handle result\n          //console.log(result);\n          this.items = result;\n        },\n        error => {\n          //console.log(error);\n        },\n        () => {\n          // 'onCompleted' callback.\n          this.warning = false;\n        }\n      );\n    });\n  }\n\n  onSubmit(f:any): void {\n    if (f.itemName === '') {\n      this.warningmsg = 'Item Name is required.';\n      this.warning = true;\n    } else {\n      this.itemService.create(this.user_id, f.itemName, f.description)\n      .subscribe(\n        result => {\n          // Handle result\n          //console.log(result);\n          this.items.push(result);\n        },\n        error => {\n          //console.log(error);\n          this.warningmsg = 'Item creation unsuccessful. Item alreasy exists in list.';\n          this.warning = true;\n        },\n        () => {\n          // 'onCompleted' callback.\n          this.warning = false;\n        }\n      );\n    }\n  }\n\n  onEdit(id) {\n    this.router.navigate(['edit', {userName: this.userName, user_id: this.user_id, item_id: id}]);\n  }\n\n  onDelete(id) {\n    this.itemService.delete(id)\n    .subscribe(\n      result => {\n        // Handle result\n        //console.log(result);\n\n        let allItems = this.items;\n        var filteredItems = allItems.filter((item) => item._id !== result._id);\n    \n        this.items = filteredItems;\n      },\n      error => {\n        //console.log(error);\n      },\n      () => {\n        // 'onCompleted' callback.\n        this.warning = false;\n      }\n    );\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/dashboard/dashboard.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit/edit.component.css\n// module id = ./src/app/edit/edit.component.css\n// module chunks = main","module.exports = \"<h1>Edit Item</h1>\\n<div class=\\\"container\\\">\\n  <form id=\\\"editItemForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"itemName\\\">Item Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"itemName\\\" name=\\\"itemName\\\" \\n            [(ngModel)]=\\\"itemNameText\\\" #itemName=\\\"ngModel\\\" \\n            required autofocus />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"description\\\">Description</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"description\\\" name=\\\"description\\\" \\n            [(ngModel)]=\\\"descriptionText\\\" #description=\\\"ngModel\\\" />\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Save</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"onCancel()\\\">Cancel</button>\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/edit/edit.component.html\n// module id = ./src/app/edit/edit.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\n\nimport { ItemService } from './../providers/item/item.service';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n  userName = '';\n  user_id = '';\n  warning = false;\n  warningmsg = '';\n  item_id = '';\n\n  itemName = '';\n  itemNameText = '';\n  description = ''\n  descriptionText = '';\n\n  constructor(\n    private itemService: ItemService, \n    private router: Router,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.userName = params['userName'];\n      this.user_id = params['user_id'];\n      this.item_id = params['item_id'];\n\n      this.itemService.getItem(this.item_id)\n      .subscribe(\n        result => {\n          // Handle result\n          //console.log(result);\n          this.itemName = result[0].name;\n          this.itemNameText = result[0].name;\n          this.description = result[0].desc;\n          this.descriptionText = result[0].desc;\n        },\n        error => {\n          //console.log(error);\n          this.warningmsg = 'Item GET unsuccessful.';\n          this.warning = true;\n        },\n        () => {\n          // 'onCompleted' callback.\n        }\n      );\n\n    });\n  }\n\n  onSubmit(f:any): void {\n    if (f.itemName === '') {\n      this.warningmsg = 'Item Name is required.';\n      this.warning = true;\n    } else {\n      this.itemService.update(this.user_id, this.item_id, f.itemName, f.description)\n      .subscribe(\n        result => {\n          // Handle result\n          //console.log(result);\n        },\n        error => {\n          //console.log(error);\n          this.warningmsg = 'Item creation unsuccessful. Item alreasy exists in list.';\n          this.warning = true;\n        },\n        () => {\n          // 'onCompleted' callback.\n          this.router.navigate(['dashboard', {userName: this.userName, user_id: this.user_id}]);\n        }\n      );\n    }\n  }\n\n  onCancel() {\n    this.router.navigate(['dashboard', {userName: this.userName, user_id: this.user_id}]);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/edit/edit.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.css\n// module id = ./src/app/footer/footer.component.css\n// module chunks = main","module.exports = \"<hr />\\n<footer class=\\\"float-right\\\">&copy;\\n  <a href=\\\"https://www.linkedin.com/in/robertmfrenette\\\" title=\\\"LinkedIn Profile\\\" target=\\\"new\\\">R.M. Frenette</a> 2018\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/footer/footer.component.html\n// module id = ./src/app/footer/footer.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/footer/footer.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = ./src/app/home/home.component.css\n// module chunks = main","module.exports = \"<div class=\\\"jumbotron text-center\\\">\\n  <h1 class=\\\"display-4\\\">myLists</h1>\\n  <h2>lists made easy</h2>\\n  <p class=\\\"lead\\\">\\n    <img src=\\\"assets/img/logo.png\\\" id=\\\"logo\\\" alt=\\\"myLists list App\\\" />\\n    <br />With myLists you can easily create and manage your Lists from your computer, smart phone or tablet.\\n  </p>\\n  <hr class=\\\"my-4\\\" />\\n  <p class=\\\"lead text-center\\\">\\n    <a class=\\\"btn btn-primary btn-lg\\\" role=\\\"button\\\" (click)=\\\"onGetStarted()\\\">Get Started</a>\\n  </p>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = ./src/app/home/home.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private router: Router) {}\n\n  ngOnInit() {}\n\n  onGetStarted(): void {\n    this.router.navigate(['login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","module.exports = \".anchor {\\n  cursor: pointer;\\n  color: #007bff;\\n}\\n.anchor:hover {\\n  text-decoration: underline;\\n  color: #212529;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.css\n// module id = ./src/app/login/login.component.css\n// module chunks = main","module.exports = \"<h1>Login</h1>\\n<div class=\\\"container\\\">\\n  <form id=\\\"loginForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userName\\\">User Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"userName\\\" name=\\\"userName\\\" ngModel  #userName=\\\"ngModel\\\"\\n            placeholder=\\\"Enter your User Name\\\" required autofocus />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" \\n            id=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\"\\n            placeholder=\\\"Enter your Password\\\" required />\\n    </div>\\n    <!--\\n    <div class=\\\"form-check rememberMe\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"rememberMe\\\" name=\\\"rememberMe\\\" ngModel #rememberMe=\\\"ngModel\\\"/>\\n      <label class=\\\"form-check-label\\\" for=\\\"rememberMe\\\">Remember Me</label>\\n    </div>\\n    -->\\n    <br />\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Login</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" id=\\\"resetBtn\\\">Reset</button>\\n  </form>\\n</div>\\n<div class=\\\"container\\\">\\n  <br />\\n  <div class=\\\"alert alert-danger hidden\\\" role=\\\"alert\\\" id=\\\"errMsg\\\" *ngIf=\\\"error == true\\\">{{errmsg}}</div>\\n  <br />Don't have an account?\\n  <span title=\\\"Register\\\" class=\\\"anchor\\\" (click)=\\\"onRegister()\\\">Register.</span>\\n  <br />Forgot your password?\\n  <span title=\\\"Reset Password\\\" class=\\\"anchor\\\" (click)=\\\"onPasswordReset()\\\">Reset.</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = ./src/app/login/login.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './../providers/auth/auth.service';\nimport { NavService } from '../providers/nav/nav.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  userName: String = '';\n  user_id = '';\n  error = false;\n  errmsg = '';\n  \n  constructor(\n    private navService: NavService,\n    private authService: AuthService, \n    private router: Router) {}\n\n  ngOnInit() {\n    /*\n    let persistedName = localStorage.getItem('user_name');\n\n    if (persistedName !== null) {\n      this.userName = JSON.parse(persistedName);\n    } else {\n      this.userName = '';\n    }\n    */\n  }\n\n  onRegister(): void {\n    this.router.navigate(['register']);\n  }\n\n  onSubmit(f:any): void {\n    if (f.userName === '' || f.password === '') {\n      this.errmsg = 'User Name and Password are required.';\n      this.error = true;\n    } else {\n      this.authService.login(f.userName, f.password)\n      .subscribe(\n        result => {\n          // Handle result\n          //console.log(result);\n          this.user_id = result._id;\n        },\n        error => {\n          //console.log(error);\n          this.errmsg = 'Login unsuccessful.';\n          this.error = true;\n        },\n        () => {\n          // 'onCompleted' callback.\n          // Check \"Remeber Me\"\n          /*\n          if (!f.rememberMe) {\n            localStorage.removeItem('user_name');\n            console.log(localStorage.getItem('user_name'));\n          } else {\n            localStorage.setItem('user_name', JSON.stringify(f.userName));\n            console.log(localStorage.getItem('user_name'));\n          }\n          */\n          this.navService.sendMessage(true);\n          // No errors, route to new page here\n          this.router.navigate(['dashboard', {userName: f.userName, user_id: this.user_id}]);\n        }\n      );\n    }\n  }\n\n  onPasswordReset(): void {\n    this.router.navigate(['reset']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","module.exports = \".nav-link {\\n  cursor: pointer;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.css\n// module id = ./src/app/nav/nav.component.css\n// module chunks = main","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-light\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">myLists</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\" aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\"\\n    aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n  <div class=\\\"collapse navbar-collapse justify-content-end\\\" id=\\\"navbarNav\\\">\\n    <ul class=\\\"navbar-nav\\\">\\n      <li class=\\\"nav-item\\\" id=\\\"loginLink\\\" *ngIf=\\\"authd === false\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogin()\\\">Login</a>\\n      </li>\\n      <li class=\\\"nav-item\\\" id=\\\"registerLink\\\" *ngIf=\\\"authd === false\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onRegister()\\\">Register</a>\\n      </li>\\n      <li class=\\\"nav-item hidden\\\" id=\\\"logoutLink\\\" *ngIf=\\\"authd === true\\\">\\n        <a class=\\\"nav-link\\\" (click)=\\\"onLogout()\\\">Logout</a>\\n      </li>\\n    </ul>\\n  </div>\\n</nav>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/nav/nav.component.html\n// module id = ./src/app/nav/nav.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Router } from '@angular/router';\n\nimport { NavService } from '../providers/nav/nav.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  subscription: Subscription;\n\n  authd = false;\n\n  constructor(\n    private navService: NavService,\n    private router: Router) {\n      this.subscription = this.navService.getMessage().subscribe(message => { \n        this.authd = message.authd; \n      });\n    }\n\n  ngOnInit() {}\n\n  ngOnDestroy() {\n    // unsubscribe to ensure no memory leaks\n    this.subscription.unsubscribe();\n  }\n\n  onLogin(): void {\n    this.router.navigate(['login']);\n  }\n\n  onRegister(): void {\n    this.router.navigate(['register']);\n  }\n\n  onLogout(): void {\n    this.navService.sendMessage(false);\n    this.router.navigate(['']);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/nav/nav.component.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\n\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class AuthService {\n  private apiEndpoint: string = environment.apiurl;\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n  private options = new RequestOptions({ headers: this.headers });\n  \n  constructor(private http: Http) {}\n\n  // POST login\n  login(userName: string, password: string) : Observable<any> {\n    return this.http.post(this.apiEndpoint + 'login', {username : userName, password : password}, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  // POST register\n  register(userName: string, email: string, password: string) : Observable<any> {\n    return this.http.post(this.apiEndpoint + 'register', {username : userName, email: email, password : password}, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  // POST password reset\n  reset(email: string) : Observable<any> {\n    return this.http.post(this.apiEndpoint + 'reset', {email: email}, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  // POST password confirm\n  confirm(userName: string, email: string, password: string) : Observable<any> {\n    return this.http.post(this.apiEndpoint + 'confirm', {username : userName, email: email, password : password}, this.options)\n      .map(res => <any[]>res.json());\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/providers/auth/auth.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/of';\n\nimport { environment } from '../../../environments/environment';\n\n@Injectable()\nexport class ItemService {\n  private apiEndpoint: string = environment.apiurl;\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n  private options = new RequestOptions({ headers: this.headers });\n  \n  constructor(private http: Http) {}\n\n  // POST create item\n  create(user_id: string, itemname: string, description: string) : Observable<any> {\n    return this.http.post(this.apiEndpoint + 'item', {user_id: user_id, itemname : itemname, description : description}, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  update(user_id: string, item_id: string, itemname: string, description: string) : Observable<any> {\n    return this.http.put(this.apiEndpoint + 'item', {user_id: user_id, item_id: item_id, name : itemname, desc : description}, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  getItem(item_id: string) : Observable<any> {\n    return this.http.get(this.apiEndpoint + 'item/' + item_id, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  getItems(user_id: string) : Observable<any> {\n    return this.http.get(this.apiEndpoint + 'items/' + user_id, this.options)\n      .map(res => <any[]>res.json());\n  }\n\n  delete(_id: string) : Observable<any> {\n    return this.http.delete(this.apiEndpoint + 'item/' + _id, this.options)\n      .map(res => <any[]>res.json());\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/providers/item/item.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs/Subject';\n\n@Injectable()\nexport class NavService {\n  private subject = new Subject<any>();\n \n  sendMessage(message: boolean) {\n    this.subject.next({ authd: message });\n  }\n\n  clearMessage() {\n    this.subject.next();\n  }\n\n  getMessage(): Observable<any> {\n    return this.subject.asObservable();\n  }\n\n  constructor() { }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/providers/nav/nav.service.ts","module.exports = \".anchor {\\n  cursor: pointer;\\n  color: #007bff;\\n}\\n.anchor:hover {\\n  text-decoration: underline;\\n  color: #212529;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.css\n// module id = ./src/app/register/register.component.css\n// module chunks = main","module.exports = \"<h1>Register</h1>\\n<div class=\\\"container\\\">\\n  <form id=\\\"registerForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"userName\\\">User Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" \\n            id=\\\"userName\\\" name=\\\"userName\\\" ngModel #userName=\\\"ngModel\\\"\\n            placeholder=\\\"Enter a User Name\\\" required autofocus />\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email address</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" \\n            id=\\\"email\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\"\\n            placeholder=\\\"Enter your Email Address\\\" aria-describedby=\\\"emailHelp\\\" required\\n            pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\"/>\\n      <small id=\\\"emailHelp\\\" class=\\\"form-text text-muted\\\">We'll never share your email with anyone else.</small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"password\\\">Password</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" \\n            id=\\\"password\\\" name=\\\"password\\\" ngModel #password=\\\"ngModel\\\"\\n            placeholder=\\\"Enter a Password\\\" aria-describedby=\\\"passwordHelp\\\" minlength=\\\"8\\\" required />\\n      <small id=\\\"passwordHelp\\\" class=\\\"form-text text-muted\\\">Password must be at least 8 characters.</small>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"confirm\\\">Confirm</label>\\n      <input type=\\\"password\\\" class=\\\"form-control\\\" \\n            id=\\\"confirm\\\" name=\\\"confirm\\\" ngModel #confirm=\\\"ngModel\\\"\\n            placeholder=\\\"Confirm your password\\\" minlength=\\\"8\\\" required />\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Register</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" id=\\\"resetBtn\\\">Reset</button>\\n  </form>\\n</div>\\n<div class=\\\"container\\\">\\n  <br />\\n  <div class=\\\"alert alert-danger hidden\\\" role=\\\"alert\\\" id=\\\"errMsg\\\" *ngIf=\\\"error == true\\\">{{errmsg}}</div>\\n  Already have an account?\\n  <span title=\\\"Login\\\" class=\\\"anchor\\\" (click)=\\\"onLogin()\\\">Login now.</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/register/register.component.html\n// module id = ./src/app/register/register.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthService } from './../providers/auth/auth.service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  error = false;\n  errmsg = \"\";\n\n  constructor(\n    private authService: AuthService, \n    private router: Router) {}\n\n  ngOnInit() { }\n\n  onSubmit(f:any): void {\n    if (f.userName === '' || f.email === '' || f.password === '' || f.confirm === '') {\n      this.errmsg = 'All fields are required.';\n      this.error = true;\n    } else {\n      if (f.password !== f.confirm) {\n        this.errmsg = 'Passwords must match!'\n        this.error = true;\n      } else {\n        this.authService.register(f.userName, f.email, f.password)\n        .subscribe(\n          result => {\n            // Handle result\n            //console.log(result);\n          },\n          error => {\n            //console.log(error);\n            this.errmsg = 'Registration unsuccessful.';\n            this.error = true;\n          },\n          () => {\n            // 'onCompleted' callback.\n            // No errors, route to new page here\n            this.router.navigate(['login']);\n          }\n        );\n      }\n    }\n  }\n\n  onLogin(): void {\n    this.router.navigate(['login']);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/register/register.component.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reset/reset.component.css\n// module id = ./src/app/reset/reset.component.css\n// module chunks = main","module.exports = \"<h1>Password Reset</h1>\\n<div class=\\\"container\\\">\\n  <form id=\\\"resetForm\\\" #form=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(form.value)\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"email\\\">Email</label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" \\n            id=\\\"email\\\" name=\\\"email\\\" ngModel #email=\\\"ngModel\\\"\\n            placeholder=\\\"Enter your Email Address\\\" required autofocus \\n            pattern=\\\"^\\\\w+([\\\\.-]?\\\\w+)*@\\\\w+([\\\\.-]?\\\\w+)*(\\\\.\\\\w{2,3})+$\\\" />\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\" [disabled]=\\\"!form.valid\\\">Submit</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-secondary\\\" id=\\\"resetBtn\\\">Reset</button>\\n  </form>\\n</div>\\n<div class=\\\"container\\\">\\n  <br />\\n  <div class=\\\"alert alert-danger hidden\\\" role=\\\"alert\\\" id=\\\"errMsg\\\" *ngIf=\\\"error == true\\\">{{errmsg}}</div>\\n  <div class=\\\"alert alert-success hidden\\\" role=\\\"alert\\\" id=\\\"successMsg\\\" *ngIf=\\\"emailsent == true\\\">An email has been sent with a rest link.</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/reset/reset.component.html\n// module id = ./src/app/reset/reset.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from './../providers/auth/auth.service';\n\n@Component({\n  selector: 'app-reset',\n  templateUrl: './reset.component.html',\n  styleUrls: ['./reset.component.css']\n})\nexport class ResetComponent implements OnInit {\n  error = false;\n  errmsg = '';\n  emailsent = false;\n\n  constructor(private authService: AuthService) {}\n\n  ngOnInit() { }\n\n  onSubmit(f:any): void {\n    if (f.email === '') {\n      this.errmsg = 'Email is required.';\n      this.error = true;\n    } else {\n      this.authService.reset(f.email)\n      .subscribe(\n        result => {\n          // Handle result\n          //console.log(result);\n        },\n        error => {\n          //console.log(error);\n          this.errmsg = 'Unsuccessful.';\n          this.error = true;\n        },\n        () => {\n          // 'onCompleted' callback.\n          this.error = false;\n          this.emailsent = true;\n        }\n      );\n    }\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/reset/reset.component.ts","export const environment = {\n  production: true,\n  apiurl: 'http://localhost:8080/api/'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts"],"sourceRoot":"webpack:///"}